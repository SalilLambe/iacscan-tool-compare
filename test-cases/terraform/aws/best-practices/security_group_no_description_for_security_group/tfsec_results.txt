
Result #1 CRITICAL Security group rule allows egress to multiple public internet addresses. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Line 32
───────┬────────────────────────────────────────────────────────────────────────
   27  │   egress {
   28  │     description = "this is an egress rule for something else...."
   29  │     from_port   = 0
   30  │     to_port     = 0
   31  │     protocol    = "-1"
   32  │     cidr_blocks = ["0.0.0.0/0"]
   33  │   }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-vpc-no-public-egress-sgr
      Impact Your port is egressing data to the internet
  Resolution Set a more restrictive cidr range

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/vpc/no-public-egress-sgr/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
────────────────────────────────────────────────────────────────────────────────


Result #2 HIGH Instance does not require IMDS access to require a token 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 63-69
───────┬────────────────────────────────────────────────────────────────────────
   63  │ resource "aws_instance" "ec2" {
   64  │   ami = data.aws_ami.ubuntu.id
   65  │   instance_type = "t2.micro"
   66  │   subnet_id     = aws_subnet.subnet.id
   67  │   vpc_security_group_ids  = [aws_security_group.default.id]
   68  │ 
   69  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-ec2-enforce-http-token-imds
      Impact Instance metadata service can be interacted with freely
  Resolution Enable HTTP token requirement for IMDS

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/ec2/enforce-http-token-imds/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options
────────────────────────────────────────────────────────────────────────────────


Result #3 HIGH Root block device is not encrypted. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 63-69
───────┬────────────────────────────────────────────────────────────────────────
   63  │ resource "aws_instance" "ec2" {
   64  │   ami = data.aws_ami.ubuntu.id
   65  │   instance_type = "t2.micro"
   66  │   subnet_id     = aws_subnet.subnet.id
   67  │   vpc_security_group_ids  = [aws_security_group.default.id]
   68  │ 
   69  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-ec2-enable-at-rest-encryption
      Impact The block device could be compromised and read from
  Resolution Turn on encryption for all block devices

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/ec2/enable-at-rest-encryption/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices
────────────────────────────────────────────────────────────────────────────────


Result #4 LOW Security group explicitly uses the default description. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 15-38
───────┬────────────────────────────────────────────────────────────────────────
   15  │ resource "aws_security_group" "default" {
   16  │   name        = "examplerulename"
   17  │   vpc_id      = aws_vpc.vpc.id
   18  │ 
   19  │   ingress {
   20  │     description = "This is an inbound rule for something...."
   21  │     from_port   = 443
   22  │     to_port     = 443
   23  │     protocol    = "tcp"
   24  │     cidr_blocks = ["10.0.0.0/24"]
   25  │   }
   26  │ 
   27  │   egress {
   28  │     description = "this is an egress rule for something else...."
   29  │     from_port   = 0
   30  │     to_port     = 0
   31  │     protocol    = "-1"
   32  │     cidr_blocks = ["0.0.0.0/0"]
   33  │   }
   34  │ 
   35  │   tags = {
   36  │     Name = "example_rule_with_descriptions"
   37  │   }
   38  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-vpc-add-description-to-security-group
      Impact Descriptions provide context for the firewall rule reasons
  Resolution Add descriptions for all security groups

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/vpc/add-description-to-security-group/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule
────────────────────────────────────────────────────────────────────────────────


  timings
  ──────────────────────────────────────────
  disk i/o             1.013658ms
  parsing              725.041µs
  adaptation           87.505µs
  checks               1.100163ms
  total                2.926367ms

  counts
  ──────────────────────────────────────────
  blocks               7
  modules              1
  files                1

  results
  ──────────────────────────────────────────
  ignored              0
  excluded             0
  critical             1
  high                 2
  medium               0
  low                  1

  4 potential problem(s) detected.


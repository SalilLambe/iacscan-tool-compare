
Result #1 CRITICAL Security group rule allows egress to multiple public internet addresses. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Line 62
───────┬────────────────────────────────────────────────────────────────────────
   58  │   egress {
   59  │     from_port   = 443
   60  │     to_port     = 443
   61  │     protocol    = "tcp"
   62  │     cidr_blocks = [local.s3_prefix_list_cidr_block]
   63  │   }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-vpc-no-public-egress-sgr
      Impact Your port is egressing data to the internet
  Resolution Set a more restrictive cidr range

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/vpc/no-public-egress-sgr/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
────────────────────────────────────────────────────────────────────────────────


Result #2 HIGH Instance does not require IMDS access to require a token 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 83-88
───────┬────────────────────────────────────────────────────────────────────────
   83  │ resource "aws_instance" "test" {
   84  │   ami = data.aws_ami.ubuntu.id
   85  │   instance_type = "t2.micro"
   86  │   vpc_security_group_ids = [aws_security_group.allow-public-outbound-sg.id]
   87  │   subnet_id = aws_subnet.private-subnet.id
   88  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-ec2-enforce-http-token-imds
      Impact Instance metadata service can be interacted with freely
  Resolution Enable HTTP token requirement for IMDS

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/ec2/enforce-http-token-imds/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options
────────────────────────────────────────────────────────────────────────────────


Result #3 HIGH Root block device is not encrypted. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 83-88
───────┬────────────────────────────────────────────────────────────────────────
   83  │ resource "aws_instance" "test" {
   84  │   ami = data.aws_ami.ubuntu.id
   85  │   instance_type = "t2.micro"
   86  │   vpc_security_group_ids = [aws_security_group.allow-public-outbound-sg.id]
   87  │   subnet_id = aws_subnet.private-subnet.id
   88  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-ec2-enable-at-rest-encryption
      Impact The block device could be compromised and read from
  Resolution Turn on encryption for all block devices

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/ec2/enable-at-rest-encryption/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices
────────────────────────────────────────────────────────────────────────────────


Result #4 HIGH Cluster encryption is not enabled. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 90-107
───────┬────────────────────────────────────────────────────────────────────────
   90  │ resource "aws_dynamodb_table" "basic-dynamodb-table" {
   91  │   name           = "GameScores"
   92  │   billing_mode   = "PROVISIONED"
   93  │   read_capacity  = 5
   94  │   write_capacity = 5
   95  │   hash_key       = "UserId"
   96  │   range_key      = "GameTitle"
   97  │ 
   98  │   attribute {
   99  │     name = "UserId"
  100  │     type = "S"
  101  │   }
  102  │ 
  103  │   attribute {
  104  │     name = "GameTitle"
  105  │     type = "S"
  106  │   }
  107  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-dynamodb-enable-at-rest-encryption
      Impact Data can be freely read if compromised
  Resolution Enable encryption at rest for DAX Cluster

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/dynamodb/enable-at-rest-encryption/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dax_cluster#server_side_encryption
────────────────────────────────────────────────────────────────────────────────


Result #5 MEDIUM Point-in-time recovery is not enabled. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 90-107
───────┬────────────────────────────────────────────────────────────────────────
   90  │ resource "aws_dynamodb_table" "basic-dynamodb-table" {
   91  │   name           = "GameScores"
   92  │   billing_mode   = "PROVISIONED"
   93  │   read_capacity  = 5
   94  │   write_capacity = 5
   95  │   hash_key       = "UserId"
   96  │   range_key      = "GameTitle"
   97  │ 
   98  │   attribute {
   99  │     name = "UserId"
  100  │     type = "S"
  101  │   }
  102  │ 
  103  │   attribute {
  104  │     name = "GameTitle"
  105  │     type = "S"
  106  │   }
  107  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-dynamodb-enable-recovery
      Impact Accidental or malicious writes and deletes can't be rolled back
  Resolution Enable point in time recovery

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/dynamodb/enable-recovery/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#point_in_time_recovery
────────────────────────────────────────────────────────────────────────────────


Result #6 LOW Security group rule does not have a description. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 58-63
───────┬────────────────────────────────────────────────────────────────────────
   58  │   egress {
   59  │     from_port   = 443
   60  │     to_port     = 443
   61  │     protocol    = "tcp"
   62  │     cidr_blocks = [local.s3_prefix_list_cidr_block]
   63  │   }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-vpc-add-description-to-security-group-rule
      Impact Descriptions provide context for the firewall rule reasons
  Resolution Add descriptions for all security groups rules

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/vpc/add-description-to-security-group-rule/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule
────────────────────────────────────────────────────────────────────────────────


Result #7 LOW Cluster encryption does not use a customer-managed KMS key. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 90-107
───────┬────────────────────────────────────────────────────────────────────────
   90  │ resource "aws_dynamodb_table" "basic-dynamodb-table" {
   91  │   name           = "GameScores"
   92  │   billing_mode   = "PROVISIONED"
   93  │   read_capacity  = 5
   94  │   write_capacity = 5
   95  │   hash_key       = "UserId"
   96  │   range_key      = "GameTitle"
   97  │ 
   98  │   attribute {
   99  │     name = "UserId"
  100  │     type = "S"
  101  │   }
  102  │ 
  103  │   attribute {
  104  │     name = "GameTitle"
  105  │     type = "S"
  106  │   }
  107  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-dynamodb-table-customer-key
      Impact Using AWS managed keys does not allow for fine grained control
  Resolution Enable server side encryption with a customer managed key

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/dynamodb/table-customer-key/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#server_side_encryption
────────────────────────────────────────────────────────────────────────────────


  timings
  ──────────────────────────────────────────
  disk i/o             1.292574ms
  parsing              1.136265ms
  adaptation           105.106µs
  checks               3.201784ms
  total                5.735729ms

  counts
  ──────────────────────────────────────────
  blocks               11
  modules              1
  files                1

  results
  ──────────────────────────────────────────
  ignored              0
  excluded             0
  critical             1
  high                 3
  medium               1
  low                  2

  7 potential problem(s) detected.


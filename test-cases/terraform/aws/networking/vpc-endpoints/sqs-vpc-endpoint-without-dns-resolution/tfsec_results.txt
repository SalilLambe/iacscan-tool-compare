
Result #1 CRITICAL Security group rule allows egress to multiple public internet addresses. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Line 59
───────┬────────────────────────────────────────────────────────────────────────
   55  │   egress {
   56  │     from_port   = 0
   57  │     to_port     = 0
   58  │     protocol    = "-1"
   59  │     cidr_blocks = [local.quad_zero_cidr_block]
   60  │   }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-vpc-no-public-egress-sgr
      Impact Your port is egressing data to the internet
  Resolution Set a more restrictive cidr range

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/vpc/no-public-egress-sgr/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
────────────────────────────────────────────────────────────────────────────────


Result #2 HIGH Queue is not encrypted with a customer managed key. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 103-105
───────┬────────────────────────────────────────────────────────────────────────
  103  │ resource "aws_sqs_queue" "test-queue" {
  104  │   name = "test-queue"
  105  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-sqs-enable-queue-encryption
      Impact The SQS queue messages could be read if compromised
  Resolution Turn on SQS Queue encryption

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/sqs/enable-queue-encryption/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue#server-side-encryption-sse
────────────────────────────────────────────────────────────────────────────────


Result #3 HIGH Instance does not require IMDS access to require a token 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 87-92
───────┬────────────────────────────────────────────────────────────────────────
   87  │ resource "aws_instance" "test-ec2-instance" {
   88  │   ami = data.aws_ami.ubuntu.id
   89  │   instance_type = "t2.micro"
   90  │   subnet_id = aws_subnet.public-subnet.id
   91  │   vpc_security_group_ids = [aws_security_group.public-internet-sg.id]
   92  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-ec2-enforce-http-token-imds
      Impact Instance metadata service can be interacted with freely
  Resolution Enable HTTP token requirement for IMDS

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/ec2/enforce-http-token-imds/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options
────────────────────────────────────────────────────────────────────────────────


Result #4 HIGH Root block device is not encrypted. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 87-92
───────┬────────────────────────────────────────────────────────────────────────
   87  │ resource "aws_instance" "test-ec2-instance" {
   88  │   ami = data.aws_ami.ubuntu.id
   89  │   instance_type = "t2.micro"
   90  │   subnet_id = aws_subnet.public-subnet.id
   91  │   vpc_security_group_ids = [aws_security_group.public-internet-sg.id]
   92  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-ec2-enable-at-rest-encryption
      Impact The block device could be compromised and read from
  Resolution Turn on encryption for all block devices

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/ec2/enable-at-rest-encryption/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices
────────────────────────────────────────────────────────────────────────────────


Result #5 LOW Security group rule does not have a description. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 55-60
───────┬────────────────────────────────────────────────────────────────────────
   55  │   egress {
   56  │     from_port   = 0
   57  │     to_port     = 0
   58  │     protocol    = "-1"
   59  │     cidr_blocks = [local.quad_zero_cidr_block]
   60  │   }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-vpc-add-description-to-security-group-rule
      Impact Descriptions provide context for the firewall rule reasons
  Resolution Add descriptions for all security groups rules

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/vpc/add-description-to-security-group-rule/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule
────────────────────────────────────────────────────────────────────────────────


Result #6 LOW Security group rule does not have a description. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 62-67
───────┬────────────────────────────────────────────────────────────────────────
   62  │   ingress {
   63  │     from_port   = 0
   64  │     to_port     = 0
   65  │     protocol    = "-1"
   66  │     cidr_blocks = [local.cidr_block]
   67  │   }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-vpc-add-description-to-security-group-rule
      Impact Descriptions provide context for the firewall rule reasons
  Resolution Add descriptions for all security groups rules

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/vpc/add-description-to-security-group-rule/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule
────────────────────────────────────────────────────────────────────────────────


  timings
  ──────────────────────────────────────────
  disk i/o             1.203808ms
  parsing              1.681912ms
  adaptation           116.2µs
  checks               4.307331ms
  total                7.309251ms

  counts
  ──────────────────────────────────────────
  blocks               12
  modules              1
  files                1

  results
  ──────────────────────────────────────────
  ignored              0
  excluded             0
  critical             1
  high                 3
  medium               0
  low                  2

  6 potential problem(s) detected.


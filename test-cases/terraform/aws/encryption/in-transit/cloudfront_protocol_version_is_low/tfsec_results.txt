
Result #1 CRITICAL Distribution allows unencrypted communications. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Line 64
───────┬────────────────────────────────────────────────────────────────────────
   51  │   default_cache_behavior {
   52  │     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
   53  │     cached_methods   = ["GET", "HEAD"]
   54  │     target_origin_id = local.s3_origin_id
   55  │ 
   56  │     forwarded_values {
   57  │       query_string = false
   58  │ 
   59  │       cookies {
   60  │         forward = "none"
   61  │       }
   62  │     }
   63  │ 
   64  │     viewer_protocol_policy = "allow-all"        "allow-all"
   65  │     min_ttl                = 0
   66  │     default_ttl            = 3600
   67  │     max_ttl                = 86400
   68  │   }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-cloudfront-enforce-https
      Impact CloudFront is available through an unencrypted connection
  Resolution Only allow HTTPS for CloudFront distribution communication

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/cloudfront/enforce-https/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#viewer_protocol_policy
────────────────────────────────────────────────────────────────────────────────


Result #2 HIGH Distribution allows unencrypted communications. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 128-130
───────┬────────────────────────────────────────────────────────────────────────
  128  │   viewer_certificate {
  129  │     cloudfront_default_certificate = true
  130  │   }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-cloudfront-use-secure-tls-policy
      Impact Outdated SSL policies increase exposure to known vulnerabilities
  Resolution Use the most modern TLS/SSL policies available

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/cloudfront/use-secure-tls-policy/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#minimum_protocol_version
────────────────────────────────────────────────────────────────────────────────


Result #3 HIGH No public access block so not blocking public acls 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 14-25
───────┬────────────────────────────────────────────────────────────────────────
   14  │ resource "aws_s3_bucket" "dist" {
   15  │   bucket = "dist-cloud-test"
   16  │   acl    = "public-read-write"
   17  │ 
   18  │   tags = {
   19  │     Name = "dist-cloud-test"
   20  │   }
   21  │   logging {
   22  │    	target_bucket = aws_s3_bucket.logging.id
   23  │   	target_prefix = "log/"
   24  │   }
   25  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-block-public-acls
      Impact PUT calls with public ACLs specified can make objects public
  Resolution Enable blocking any PUT calls with a public ACL specified

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/block-public-acls/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls
────────────────────────────────────────────────────────────────────────────────


Result #4 HIGH No public access block so not blocking public policies 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 14-25
───────┬────────────────────────────────────────────────────────────────────────
   14  │ resource "aws_s3_bucket" "dist" {
   15  │   bucket = "dist-cloud-test"
   16  │   acl    = "public-read-write"
   17  │ 
   18  │   tags = {
   19  │     Name = "dist-cloud-test"
   20  │   }
   21  │   logging {
   22  │    	target_bucket = aws_s3_bucket.logging.id
   23  │   	target_prefix = "log/"
   24  │   }
   25  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-block-public-policy
      Impact Users could put a policy that allows public access
  Resolution Prevent policies that allow public access being PUT

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/block-public-policy/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy
────────────────────────────────────────────────────────────────────────────────


Result #5 HIGH Bucket does not have encryption enabled 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 14-25
───────┬────────────────────────────────────────────────────────────────────────
   14  │ resource "aws_s3_bucket" "dist" {
   15  │   bucket = "dist-cloud-test"
   16  │   acl    = "public-read-write"
   17  │ 
   18  │   tags = {
   19  │     Name = "dist-cloud-test"
   20  │   }
   21  │   logging {
   22  │    	target_bucket = aws_s3_bucket.logging.id
   23  │   	target_prefix = "log/"
   24  │   }
   25  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-enable-bucket-encryption
      Impact The bucket objects could be read if compromised
  Resolution Configure bucket encryption

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/enable-bucket-encryption/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption
────────────────────────────────────────────────────────────────────────────────


Result #6 HIGH No public access block so not ignoring public acls 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 14-25
───────┬────────────────────────────────────────────────────────────────────────
   14  │ resource "aws_s3_bucket" "dist" {
   15  │   bucket = "dist-cloud-test"
   16  │   acl    = "public-read-write"
   17  │ 
   18  │   tags = {
   19  │     Name = "dist-cloud-test"
   20  │   }
   21  │   logging {
   22  │    	target_bucket = aws_s3_bucket.logging.id
   23  │   	target_prefix = "log/"
   24  │   }
   25  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-ignore-public-acls
      Impact PUT calls with public ACLs specified can make objects public
  Resolution Enable ignoring the application of public ACLs in PUT calls

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/ignore-public-acls/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls
────────────────────────────────────────────────────────────────────────────────


Result #7 HIGH No public access block so not restricting public buckets 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 14-25
───────┬────────────────────────────────────────────────────────────────────────
   14  │ resource "aws_s3_bucket" "dist" {
   15  │   bucket = "dist-cloud-test"
   16  │   acl    = "public-read-write"
   17  │ 
   18  │   tags = {
   19  │     Name = "dist-cloud-test"
   20  │   }
   21  │   logging {
   22  │    	target_bucket = aws_s3_bucket.logging.id
   23  │   	target_prefix = "log/"
   24  │   }
   25  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-no-public-buckets
      Impact Public buckets can be accessed by anyone
  Resolution Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/no-public-buckets/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡
────────────────────────────────────────────────────────────────────────────────


Result #8 HIGH Bucket does not encrypt data with a customer managed key. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 14-25
───────┬────────────────────────────────────────────────────────────────────────
   14  │ resource "aws_s3_bucket" "dist" {
   15  │   bucket = "dist-cloud-test"
   16  │   acl    = "public-read-write"
   17  │ 
   18  │   tags = {
   19  │     Name = "dist-cloud-test"
   20  │   }
   21  │   logging {
   22  │    	target_bucket = aws_s3_bucket.logging.id
   23  │   	target_prefix = "log/"
   24  │   }
   25  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-encryption-customer-key
      Impact Using AWS managed keys does not allow for fine grained control
  Resolution Enable encryption using customer managed keys

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/encryption-customer-key/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption
────────────────────────────────────────────────────────────────────────────────


Result #9 HIGH Bucket has a public ACL: 'public-read-write'. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Line 16
───────┬────────────────────────────────────────────────────────────────────────
   14  │ resource "aws_s3_bucket" "dist" {
   15  │   bucket = "dist-cloud-test"
   16  │   acl    = "public-read-write"        "public-read-write"
   17  │ 
   18  │   tags = {
   19  │     Name = "dist-cloud-test"
   20  │   }
   21  │   logging {
   22  │    	target_bucket = aws_s3_bucket.logging.id
   23  │   	target_prefix = "log/"
   24  │   }
   25  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-no-public-access-with-acl
      Impact Public access to the bucket can lead to data leakage
  Resolution Don't use canned ACLs or switch to private acl

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/no-public-access-with-acl/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket
────────────────────────────────────────────────────────────────────────────────


Result #10 HIGH Distribution does not utilise a WAF. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 32-131
───────┬────────────────────────────────────────────────────────────────────────
   32  │ resource "aws_cloudfront_distribution" "s3_distribution" {
   33  │   origin {
   34  │     domain_name = aws_s3_bucket.dist.bucket_regional_domain_name
   35  │     origin_id   = local.s3_origin_id
   36  │   }
   37  │ 
   38  │   enabled             = true
   39  │   is_ipv6_enabled     = true
   40  │   comment             = "Some comment"
   41  │   default_root_object = "index.html"
   42  │ 
   43  │   logging_config {
   44  │     include_cookies = false
   45  │     bucket          = "dist-cloud-test-logs.s3.amazonaws.com"
   46  │     prefix          = "log/"
   47  │   }
   48  │ 
   49  │   aliases = ["mysite.example.com", "yoursite.example.com"]
   50  │ 
   51  │   default_cache_behavior {
   52  │     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
   53  │     cached_methods   = ["GET", "HEAD"]
   54  │     target_origin_id = local.s3_origin_id
   55  │ 
   56  │     forwarded_values {
   57  │       query_string = false
   58  │ 
   59  │       cookies {
   60  │         forward = "none"
   61  │       }
   62  │     }
   63  │ 
   64  │     viewer_protocol_policy = "allow-all"
   65  │     min_ttl                = 0
   66  │     default_ttl            = 3600
   67  │     max_ttl                = 86400
   68  │   }
   69  │ 
   70  │   # Cache behavior with precedence 0
   71  │   ordered_cache_behavior {
   72  │     path_pattern     = "/content/immutable/*"
   73  │     allowed_methods  = ["GET", "HEAD", "OPTIONS"]
   74  │     cached_methods   = ["GET", "HEAD", "OPTIONS"]
   75  │     target_origin_id = local.s3_origin_id
   76  │ 
   77  │     forwarded_values {
   78  │       query_string = false
   79  │       headers      = ["Origin"]
   80  │ 
   81  │       cookies {
   82  │         forward = "none"
   83  │       }
   84  │     }
   85  │ 
   86  │     min_ttl                = 0
   87  │     default_ttl            = 86400
   88  │     max_ttl                = 31536000
   89  │     compress               = true
   90  │     viewer_protocol_policy = "redirect-to-https"
   91  │   }
   92  │ 
   93  │   # Cache behavior with precedence 1
   94  │   ordered_cache_behavior {
   95  │     path_pattern     = "/content/*"
   96  │     allowed_methods  = ["GET", "HEAD", "OPTIONS"]
   97  │     cached_methods   = ["GET", "HEAD"]
   98  │     target_origin_id = local.s3_origin_id
   99  │ 
  100  │     forwarded_values {
  101  │       query_string = false
  102  │ 
  103  │       cookies {
  104  │         forward = "none"
  105  │       }
  106  │     }
  107  │ 
  108  │     min_ttl                = 0
  109  │     default_ttl            = 3600
  110  │     max_ttl                = 86400
  111  │     compress               = true
  112  │     viewer_protocol_policy = "redirect-to-https"
  113  │   }
  114  │ 
  115  │   price_class = "PriceClass_200"
  116  │ 
  117  │   restrictions {
  118  │     geo_restriction {
  119  │       restriction_type = "whitelist"
  120  │       locations        = ["US", "CA", "GB", "DE"]
  121  │     }
  122  │   }
  123  │ 
  124  │   tags = {
  125  │     Environment = "production"
  126  │   }
  127  │ 
  128  │   viewer_certificate {
  129  │     cloudfront_default_certificate = true
  130  │   }
  131  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-cloudfront-enable-waf
      Impact Complex web application attacks can more easily be performed without a WAF
  Resolution Enable WAF for the CloudFront distribution

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/cloudfront/enable-waf/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#web_acl_id
────────────────────────────────────────────────────────────────────────────────


Result #11 HIGH No public access block so not blocking public acls 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 5-12
───────┬────────────────────────────────────────────────────────────────────────
    5  │ resource "aws_s3_bucket" "logging" {
    6  │   bucket = "dist-cloud-test-logs"
    7  │   acl    = "log-delivery-write"
    8  │ 
    9  │   tags = {
   10  │     Name = "dist-cloud-test-logs"
   11  │   }
   12  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-block-public-acls
      Impact PUT calls with public ACLs specified can make objects public
  Resolution Enable blocking any PUT calls with a public ACL specified

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/block-public-acls/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls
────────────────────────────────────────────────────────────────────────────────


Result #12 HIGH No public access block so not blocking public policies 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 5-12
───────┬────────────────────────────────────────────────────────────────────────
    5  │ resource "aws_s3_bucket" "logging" {
    6  │   bucket = "dist-cloud-test-logs"
    7  │   acl    = "log-delivery-write"
    8  │ 
    9  │   tags = {
   10  │     Name = "dist-cloud-test-logs"
   11  │   }
   12  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-block-public-policy
      Impact Users could put a policy that allows public access
  Resolution Prevent policies that allow public access being PUT

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/block-public-policy/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy
────────────────────────────────────────────────────────────────────────────────


Result #13 HIGH Bucket does not have encryption enabled 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 5-12
───────┬────────────────────────────────────────────────────────────────────────
    5  │ resource "aws_s3_bucket" "logging" {
    6  │   bucket = "dist-cloud-test-logs"
    7  │   acl    = "log-delivery-write"
    8  │ 
    9  │   tags = {
   10  │     Name = "dist-cloud-test-logs"
   11  │   }
   12  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-enable-bucket-encryption
      Impact The bucket objects could be read if compromised
  Resolution Configure bucket encryption

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/enable-bucket-encryption/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption
────────────────────────────────────────────────────────────────────────────────


Result #14 HIGH No public access block so not ignoring public acls 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 5-12
───────┬────────────────────────────────────────────────────────────────────────
    5  │ resource "aws_s3_bucket" "logging" {
    6  │   bucket = "dist-cloud-test-logs"
    7  │   acl    = "log-delivery-write"
    8  │ 
    9  │   tags = {
   10  │     Name = "dist-cloud-test-logs"
   11  │   }
   12  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-ignore-public-acls
      Impact PUT calls with public ACLs specified can make objects public
  Resolution Enable ignoring the application of public ACLs in PUT calls

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/ignore-public-acls/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls
────────────────────────────────────────────────────────────────────────────────


Result #15 HIGH No public access block so not restricting public buckets 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 5-12
───────┬────────────────────────────────────────────────────────────────────────
    5  │ resource "aws_s3_bucket" "logging" {
    6  │   bucket = "dist-cloud-test-logs"
    7  │   acl    = "log-delivery-write"
    8  │ 
    9  │   tags = {
   10  │     Name = "dist-cloud-test-logs"
   11  │   }
   12  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-no-public-buckets
      Impact Public buckets can be accessed by anyone
  Resolution Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/no-public-buckets/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡
────────────────────────────────────────────────────────────────────────────────


Result #16 HIGH Bucket does not encrypt data with a customer managed key. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 5-12
───────┬────────────────────────────────────────────────────────────────────────
    5  │ resource "aws_s3_bucket" "logging" {
    6  │   bucket = "dist-cloud-test-logs"
    7  │   acl    = "log-delivery-write"
    8  │ 
    9  │   tags = {
   10  │     Name = "dist-cloud-test-logs"
   11  │   }
   12  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-encryption-customer-key
      Impact Using AWS managed keys does not allow for fine grained control
  Resolution Enable encryption using customer managed keys

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/encryption-customer-key/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption
────────────────────────────────────────────────────────────────────────────────


Result #17 MEDIUM Bucket does not have versioning enabled 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 14-25
───────┬────────────────────────────────────────────────────────────────────────
   14  │ resource "aws_s3_bucket" "dist" {
   15  │   bucket = "dist-cloud-test"
   16  │   acl    = "public-read-write"
   17  │ 
   18  │   tags = {
   19  │     Name = "dist-cloud-test"
   20  │   }
   21  │   logging {
   22  │    	target_bucket = aws_s3_bucket.logging.id
   23  │   	target_prefix = "log/"
   24  │   }
   25  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-enable-versioning
      Impact Deleted or modified data would not be recoverable
  Resolution Enable versioning to protect against accidental/malicious removal or modification

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/enable-versioning/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning
────────────────────────────────────────────────────────────────────────────────


Result #18 MEDIUM Bucket does not have versioning enabled 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 5-12
───────┬────────────────────────────────────────────────────────────────────────
    5  │ resource "aws_s3_bucket" "logging" {
    6  │   bucket = "dist-cloud-test-logs"
    7  │   acl    = "log-delivery-write"
    8  │ 
    9  │   tags = {
   10  │     Name = "dist-cloud-test-logs"
   11  │   }
   12  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-enable-versioning
      Impact Deleted or modified data would not be recoverable
  Resolution Enable versioning to protect against accidental/malicious removal or modification

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/enable-versioning/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning
────────────────────────────────────────────────────────────────────────────────


Result #19 LOW Bucket does not have a corresponding public access block. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 14-25
───────┬────────────────────────────────────────────────────────────────────────
   14  │ resource "aws_s3_bucket" "dist" {
   15  │   bucket = "dist-cloud-test"
   16  │   acl    = "public-read-write"
   17  │ 
   18  │   tags = {
   19  │     Name = "dist-cloud-test"
   20  │   }
   21  │   logging {
   22  │    	target_bucket = aws_s3_bucket.logging.id
   23  │   	target_prefix = "log/"
   24  │   }
   25  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-specify-public-access-block
      Impact Public access policies may be applied to sensitive data buckets
  Resolution Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/specify-public-access-block/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket
────────────────────────────────────────────────────────────────────────────────


Result #20 LOW Bucket does not have a corresponding public access block. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 5-12
───────┬────────────────────────────────────────────────────────────────────────
    5  │ resource "aws_s3_bucket" "logging" {
    6  │   bucket = "dist-cloud-test-logs"
    7  │   acl    = "log-delivery-write"
    8  │ 
    9  │   tags = {
   10  │     Name = "dist-cloud-test-logs"
   11  │   }
   12  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-specify-public-access-block
      Impact Public access policies may be applied to sensitive data buckets
  Resolution Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/specify-public-access-block/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket
────────────────────────────────────────────────────────────────────────────────


  timings
  ──────────────────────────────────────────
  disk i/o             185.411µs
  parsing              725.142µs
  adaptation           101.705µs
  checks               4.860778ms
  total                5.873036ms

  counts
  ──────────────────────────────────────────
  blocks               5
  modules              1
  files                1

  results
  ──────────────────────────────────────────
  ignored              0
  excluded             0
  critical             1
  high                 15
  medium               2
  low                  2

  20 potential problem(s) detected.



WARNINGs found:
Rule: Ensure Lambda function has X-Ray tracing enabled
 - 1 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_lambda_function.test_lambda] (main.tf:57)
     Violating Resource: [aws_lambda_function.test_lambda]  (main.tf:57)

     Evidence:
             | The Lambda Function aws_lambda_function.test_lambda does not have X-Ray tracing enabled


-----------------------------------------------
Rule: Ensure IAM policies pass Access Analyzer policy validation without WARNING and SUGGESTION issues
 - 1 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_iam_role.iam_for_lambda] (main.tf:9)
     Violating Resource: [aws_iam_role.iam_for_lambda]  (main.tf:9)

     Evidence:
         Line 10, Col 13:
             | Add a value to the empty string in the Sid element
             | See https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-sid-value


-----------------------------------------------
Rule: Ensure all resources that can be tagged have at least one tag
 - 2 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_lambda_function.test_lambda] (main.tf:57)
     Violating Resource: [aws_lambda_function.test_lambda]  (main.tf:57)

     Evidence:
             | Resource Lambda Function aws_lambda_function.test_lambda does not have any tags set


   - Exposed Resource: [aws_iam_role.iam_for_lambda] (main.tf:9)
     Violating Resource: [aws_iam_role.iam_for_lambda]  (main.tf:9)

     Evidence:
             | Resource IAM Role aws_iam_role.iam_for_lambda does not have any tags set


-----------------------------------------------
Rule: Ensure each Lambda function has a non-infinite log retention
 - 1 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_lambda_function.test_lambda] (main.tf:57)
     Violating Resource: [aws_lambda_function.test_lambda]  (main.tf:57)

     Evidence:
             | Upon creation, Lambda Function aws_lambda_function.test_lambda will have a log group generated automatically with its retention set to Never Expire


-----------------------------------------------
Rule: Ensure use of Lambda function policy, and no action wildcards are being used
 - 1 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_lambda_function.test_lambda] (main.tf:57)
     Violating Resource: [aws_lambda_function.test_lambda]  (main.tf:57)

     Evidence:
             | There is no resource policy or no statements attached to aws_lambda_function.test_lambda


-----------------------------------------------
Rule: Disallow IAM permissions which can lead to privilege escalation
 - 2 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_iam_role_policy.allow-policy-1] (main.tf:25)
     Violating Resource: [aws_iam_role_policy.allow-policy-1]  (main.tf:25)

     Evidence:
         aws_iam_role_policy.allow-policy-1
             | is applied to arn:aws:iam::000000000000:role/role
             | in conjunction with aws_iam_role_policy.allow-policy-1, aws_iam_role_policy.allow-policy-2 {'iam:passrole', 'lambda:invokefunc*', 'lambda:createfunction'} allows a hacker to trigger a Lambda function with a role they choose


   - Exposed Resource: [aws_iam_role_policy.policy] (main.tf:25)
     Violating Resource: [aws_iam_role_policy.policy]  (main.tf:25)

     Evidence:
         aws_iam_role_policy.policy
             | is applied to arn:aws:iam::000000000000:role/role
             | granting the problematic permissions {'iam:*', 'iam: AttachUser*'} which can allow for privilege escalation


-----------------------------------------------

Cloudrail ran this assessment without any policies and so all rule violations show as warnings.
You can increase a rule's enforcement level by creating a Policy in the Web UI and adding the rule to it.
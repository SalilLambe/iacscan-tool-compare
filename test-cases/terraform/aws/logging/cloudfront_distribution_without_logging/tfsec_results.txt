
Result #1 CRITICAL Distribution allows unencrypted communications. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Line 44
───────┬────────────────────────────────────────────────────────────────────────
   31  │   default_cache_behavior {
   32  │     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
   33  │     cached_methods   = ["GET", "HEAD"]
   34  │     target_origin_id = local.s3_origin_id
   35  │ 
   36  │     forwarded_values {
   37  │       query_string = false
   38  │ 
   39  │       cookies {
   40  │         forward = "none"
   41  │       }
   42  │     }
   43  │ 
   44  │     viewer_protocol_policy = "allow-all"        "allow-all"
   45  │     min_ttl                = 0
   46  │     default_ttl            = 3600
   47  │     max_ttl                = 86400
   48  │   }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-cloudfront-enforce-https
      Impact CloudFront is available through an unencrypted connection
  Resolution Only allow HTTPS for CloudFront distribution communication

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/cloudfront/enforce-https/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#viewer_protocol_policy
────────────────────────────────────────────────────────────────────────────────


Result #2 HIGH No public access block so not blocking public acls 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 1-8
───────┬────────────────────────────────────────────────────────────────────────
    1  │ resource "aws_s3_bucket" "b" {
    2  │   bucket = "mybucket"
    3  │   acl    = "private"
    4  │ 
    5  │   tags = {
    6  │     Name = "My bucket"
    7  │   }
    8  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-block-public-acls
      Impact PUT calls with public ACLs specified can make objects public
  Resolution Enable blocking any PUT calls with a public ACL specified

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/block-public-acls/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls
────────────────────────────────────────────────────────────────────────────────


Result #3 HIGH No public access block so not blocking public policies 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 1-8
───────┬────────────────────────────────────────────────────────────────────────
    1  │ resource "aws_s3_bucket" "b" {
    2  │   bucket = "mybucket"
    3  │   acl    = "private"
    4  │ 
    5  │   tags = {
    6  │     Name = "My bucket"
    7  │   }
    8  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-block-public-policy
      Impact Users could put a policy that allows public access
  Resolution Prevent policies that allow public access being PUT

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/block-public-policy/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy
────────────────────────────────────────────────────────────────────────────────


Result #4 HIGH Bucket does not have encryption enabled 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 1-8
───────┬────────────────────────────────────────────────────────────────────────
    1  │ resource "aws_s3_bucket" "b" {
    2  │   bucket = "mybucket"
    3  │   acl    = "private"
    4  │ 
    5  │   tags = {
    6  │     Name = "My bucket"
    7  │   }
    8  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-enable-bucket-encryption
      Impact The bucket objects could be read if compromised
  Resolution Configure bucket encryption

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/enable-bucket-encryption/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption
────────────────────────────────────────────────────────────────────────────────


Result #5 HIGH No public access block so not ignoring public acls 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 1-8
───────┬────────────────────────────────────────────────────────────────────────
    1  │ resource "aws_s3_bucket" "b" {
    2  │   bucket = "mybucket"
    3  │   acl    = "private"
    4  │ 
    5  │   tags = {
    6  │     Name = "My bucket"
    7  │   }
    8  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-ignore-public-acls
      Impact PUT calls with public ACLs specified can make objects public
  Resolution Enable ignoring the application of public ACLs in PUT calls

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/ignore-public-acls/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls
────────────────────────────────────────────────────────────────────────────────


Result #6 HIGH No public access block so not restricting public buckets 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 1-8
───────┬────────────────────────────────────────────────────────────────────────
    1  │ resource "aws_s3_bucket" "b" {
    2  │   bucket = "mybucket"
    3  │   acl    = "private"
    4  │ 
    5  │   tags = {
    6  │     Name = "My bucket"
    7  │   }
    8  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-no-public-buckets
      Impact Public buckets can be accessed by anyone
  Resolution Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/no-public-buckets/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡
────────────────────────────────────────────────────────────────────────────────


Result #7 HIGH Bucket does not encrypt data with a customer managed key. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 1-8
───────┬────────────────────────────────────────────────────────────────────────
    1  │ resource "aws_s3_bucket" "b" {
    2  │   bucket = "mybucket"
    3  │   acl    = "private"
    4  │ 
    5  │   tags = {
    6  │     Name = "My bucket"
    7  │   }
    8  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-encryption-customer-key
      Impact Using AWS managed keys does not allow for fine grained control
  Resolution Enable encryption using customer managed keys

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/encryption-customer-key/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption
────────────────────────────────────────────────────────────────────────────────


Result #8 HIGH Distribution allows unencrypted communications. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 108-110
───────┬────────────────────────────────────────────────────────────────────────
  108  │   viewer_certificate {
  109  │     cloudfront_default_certificate = true
  110  │   }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-cloudfront-use-secure-tls-policy
      Impact Outdated SSL policies increase exposure to known vulnerabilities
  Resolution Use the most modern TLS/SSL policies available

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/cloudfront/use-secure-tls-policy/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#minimum_protocol_version
────────────────────────────────────────────────────────────────────────────────


Result #9 HIGH Distribution does not utilise a WAF. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 14-111
───────┬────────────────────────────────────────────────────────────────────────
   14  │ resource "aws_cloudfront_distribution" "s3_distribution" {
   15  │   origin {
   16  │     domain_name = aws_s3_bucket.b.bucket_regional_domain_name
   17  │     origin_id   = local.s3_origin_id
   18  │ 
   19  │     s3_origin_config {
   20  │       origin_access_identity = "origin-access-identity/cloudfront/ABCDEFG1234567"
   21  │     }
   22  │   }
   23  │ 
   24  │   enabled             = true
   25  │   is_ipv6_enabled     = true
   26  │   comment             = "Some comment"
   27  │   default_root_object = "index.html"
   28  │ 
   29  │   aliases = ["mysite.example.com", "yoursite.example.com"]
   30  │ 
   31  │   default_cache_behavior {
   32  │     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
   33  │     cached_methods   = ["GET", "HEAD"]
   34  │     target_origin_id = local.s3_origin_id
   35  │ 
   36  │     forwarded_values {
   37  │       query_string = false
   38  │ 
   39  │       cookies {
   40  │         forward = "none"
   41  │       }
   42  │     }
   43  │ 
   44  │     viewer_protocol_policy = "allow-all"
   45  │     min_ttl                = 0
   46  │     default_ttl            = 3600
   47  │     max_ttl                = 86400
   48  │   }
   49  │ 
   50  │   # Cache behavior with precedence 0
   51  │   ordered_cache_behavior {
   52  │     path_pattern     = "/content/immutable/*"
   53  │     allowed_methods  = ["GET", "HEAD", "OPTIONS"]
   54  │     cached_methods   = ["GET", "HEAD", "OPTIONS"]
   55  │     target_origin_id = local.s3_origin_id
   56  │ 
   57  │     forwarded_values {
   58  │       query_string = false
   59  │       headers      = ["Origin"]
   60  │ 
   61  │       cookies {
   62  │         forward = "none"
   63  │       }
   64  │     }
   65  │ 
   66  │     min_ttl                = 0
   67  │     default_ttl            = 86400
   68  │     max_ttl                = 31536000
   69  │     compress               = true
   70  │     viewer_protocol_policy = "redirect-to-https"
   71  │   }
   72  │ 
   73  │   # Cache behavior with precedence 1
   74  │   ordered_cache_behavior {
   75  │     path_pattern     = "/content/*"
   76  │     allowed_methods  = ["GET", "HEAD", "OPTIONS"]
   77  │     cached_methods   = ["GET", "HEAD"]
   78  │     target_origin_id = local.s3_origin_id
   79  │ 
   80  │     forwarded_values {
   81  │       query_string = false
   82  │ 
   83  │       cookies {
   84  │         forward = "none"
   85  │       }
   86  │     }
   87  │ 
   88  │     min_ttl                = 0
   89  │     default_ttl            = 3600
   90  │     max_ttl                = 86400
   91  │     compress               = true
   92  │     viewer_protocol_policy = "redirect-to-https"
   93  │   }
   94  │ 
   95  │   price_class = "PriceClass_200"
   96  │ 
   97  │   restrictions {
   98  │     geo_restriction {
   99  │       restriction_type = "whitelist"
  100  │       locations        = ["US", "CA", "GB", "DE"]
  101  │     }
  102  │   }
  103  │ 
  104  │   tags = {
  105  │     Environment = "production"
  106  │   }
  107  │ 
  108  │   viewer_certificate {
  109  │     cloudfront_default_certificate = true
  110  │   }
  111  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-cloudfront-enable-waf
      Impact Complex web application attacks can more easily be performed without a WAF
  Resolution Enable WAF for the CloudFront distribution

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/cloudfront/enable-waf/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#web_acl_id
────────────────────────────────────────────────────────────────────────────────


Result #10 MEDIUM Bucket does not have logging enabled 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 1-8
───────┬────────────────────────────────────────────────────────────────────────
    1  │ resource "aws_s3_bucket" "b" {
    2  │   bucket = "mybucket"
    3  │   acl    = "private"
    4  │ 
    5  │   tags = {
    6  │     Name = "My bucket"
    7  │   }
    8  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-enable-bucket-logging
      Impact There is no way to determine the access to this bucket
  Resolution Add a logging block to the resource to enable access logging

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/enable-bucket-logging/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket
────────────────────────────────────────────────────────────────────────────────


Result #11 MEDIUM Bucket does not have versioning enabled 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 1-8
───────┬────────────────────────────────────────────────────────────────────────
    1  │ resource "aws_s3_bucket" "b" {
    2  │   bucket = "mybucket"
    3  │   acl    = "private"
    4  │ 
    5  │   tags = {
    6  │     Name = "My bucket"
    7  │   }
    8  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-enable-versioning
      Impact Deleted or modified data would not be recoverable
  Resolution Enable versioning to protect against accidental/malicious removal or modification

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/enable-versioning/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning
────────────────────────────────────────────────────────────────────────────────


Result #12 MEDIUM Distribution does not have logging enabled. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 14-111
───────┬────────────────────────────────────────────────────────────────────────
   14  │ resource "aws_cloudfront_distribution" "s3_distribution" {
   15  │   origin {
   16  │     domain_name = aws_s3_bucket.b.bucket_regional_domain_name
   17  │     origin_id   = local.s3_origin_id
   18  │ 
   19  │     s3_origin_config {
   20  │       origin_access_identity = "origin-access-identity/cloudfront/ABCDEFG1234567"
   21  │     }
   22  │   }
   23  │ 
   24  │   enabled             = true
   25  │   is_ipv6_enabled     = true
   26  │   comment             = "Some comment"
   27  │   default_root_object = "index.html"
   28  │ 
   29  │   aliases = ["mysite.example.com", "yoursite.example.com"]
   30  │ 
   31  │   default_cache_behavior {
   32  │     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
   33  │     cached_methods   = ["GET", "HEAD"]
   34  │     target_origin_id = local.s3_origin_id
   35  │ 
   36  │     forwarded_values {
   37  │       query_string = false
   38  │ 
   39  │       cookies {
   40  │         forward = "none"
   41  │       }
   42  │     }
   43  │ 
   44  │     viewer_protocol_policy = "allow-all"
   45  │     min_ttl                = 0
   46  │     default_ttl            = 3600
   47  │     max_ttl                = 86400
   48  │   }
   49  │ 
   50  │   # Cache behavior with precedence 0
   51  │   ordered_cache_behavior {
   52  │     path_pattern     = "/content/immutable/*"
   53  │     allowed_methods  = ["GET", "HEAD", "OPTIONS"]
   54  │     cached_methods   = ["GET", "HEAD", "OPTIONS"]
   55  │     target_origin_id = local.s3_origin_id
   56  │ 
   57  │     forwarded_values {
   58  │       query_string = false
   59  │       headers      = ["Origin"]
   60  │ 
   61  │       cookies {
   62  │         forward = "none"
   63  │       }
   64  │     }
   65  │ 
   66  │     min_ttl                = 0
   67  │     default_ttl            = 86400
   68  │     max_ttl                = 31536000
   69  │     compress               = true
   70  │     viewer_protocol_policy = "redirect-to-https"
   71  │   }
   72  │ 
   73  │   # Cache behavior with precedence 1
   74  │   ordered_cache_behavior {
   75  │     path_pattern     = "/content/*"
   76  │     allowed_methods  = ["GET", "HEAD", "OPTIONS"]
   77  │     cached_methods   = ["GET", "HEAD"]
   78  │     target_origin_id = local.s3_origin_id
   79  │ 
   80  │     forwarded_values {
   81  │       query_string = false
   82  │ 
   83  │       cookies {
   84  │         forward = "none"
   85  │       }
   86  │     }
   87  │ 
   88  │     min_ttl                = 0
   89  │     default_ttl            = 3600
   90  │     max_ttl                = 86400
   91  │     compress               = true
   92  │     viewer_protocol_policy = "redirect-to-https"
   93  │   }
   94  │ 
   95  │   price_class = "PriceClass_200"
   96  │ 
   97  │   restrictions {
   98  │     geo_restriction {
   99  │       restriction_type = "whitelist"
  100  │       locations        = ["US", "CA", "GB", "DE"]
  101  │     }
  102  │   }
  103  │ 
  104  │   tags = {
  105  │     Environment = "production"
  106  │   }
  107  │ 
  108  │   viewer_certificate {
  109  │     cloudfront_default_certificate = true
  110  │   }
  111  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-cloudfront-enable-logging
      Impact Logging provides vital information about access and usage
  Resolution Enable logging for CloudFront distributions

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/cloudfront/enable-logging/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#logging_config
────────────────────────────────────────────────────────────────────────────────


Result #13 LOW Bucket does not have a corresponding public access block. 
────────────────────────────────────────────────────────────────────────────────
 main.tf Lines 1-8
───────┬────────────────────────────────────────────────────────────────────────
    1  │ resource "aws_s3_bucket" "b" {
    2  │   bucket = "mybucket"
    3  │   acl    = "private"
    4  │ 
    5  │   tags = {
    6  │     Name = "My bucket"
    7  │   }
    8  │ }
───────┴────────────────────────────────────────────────────────────────────────
          ID aws-s3-specify-public-access-block
      Impact Public access policies may be applied to sensitive data buckets
  Resolution Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies

  More Information
  - https://aquasecurity.github.io/tfsec/v1.8.0/checks/aws/s3/specify-public-access-block/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket
────────────────────────────────────────────────────────────────────────────────


  timings
  ──────────────────────────────────────────
  disk i/o             1.285707ms
  parsing              409.503µs
  adaptation           86.801µs
  checks               2.622718ms
  total                4.404729ms

  counts
  ──────────────────────────────────────────
  blocks               3
  modules              1
  files                1

  results
  ──────────────────────────────────────────
  ignored              0
  excluded             0
  critical             1
  high                 8
  medium               3
  low                  1

  13 potential problem(s) detected.

